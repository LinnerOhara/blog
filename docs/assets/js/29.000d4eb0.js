(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{605:function(n,s,e){"use strict";e.r(s);var a=e(15),r=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[n._v("介绍")]),e("p",[e("a",{attrs:{href:"https://pnpm.io/zh/",target:"_blank",rel:"noopener noreferrer"}},[n._v("pnpm"),e("OutboundLink")],1),n._v("是前端项目的包管理工具，但并不是唯一的包管理工具，相同的还有 npm 和 yarn。")])]),e("h2",{attrs:{id:"什么是pnpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是pnpm"}},[n._v("#")]),n._v(" 什么是pnpm")]),n._v(" "),e("p",[n._v("pnpm 是 Node.js 的代替包管理器。它是 npm 的直接代替品，但速度更快，效率更高。")]),n._v(" "),e("h2",{attrs:{id:"pnpm-的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-的优势"}},[n._v("#")]),n._v(" pnpm 的优势")]),n._v(" "),e("p",[n._v("当使用 npm 或 yarn 时，如果有多个项目依赖于相同的依赖包，那么，会产生多个相同依赖包的副本。然而，如果是使用 pnpm，依赖包将被存放在一个统一的位置。")]),n._v(" "),e("p",[n._v("如果你对同一个依赖包需要使用不同的版本，则仅有版本之间不同的文件会被存储起来。且所有文件都保存在硬盘的统一位置。当多个项目安装相同版本的依赖包时，会硬链接至该位置，而不会占用额外的硬盘空间。")]),n._v(" "),e("p",[n._v("最终结果就是在多个项目中来看，节省了大量的硬盘空间，且提升了依赖包的安装速度。")]),n._v(" "),e("h2",{attrs:{id:"与-npm-的差别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与-npm-的差别"}},[n._v("#")]),n._v(" 与 npm 的差别")]),n._v(" "),e("p",[n._v("与 npm 不同的是，pnpm 会校验所有的参数。 比如，"),e("code",[n._v("pnpm install --foo")]),n._v(" 会执行失败，因为 "),e("code",[n._v("--foo")]),n._v(" 不是 "),e("code",[n._v("pnpm install")]),n._v(" 的有效参数。")]),n._v(" "),e("p",[n._v("但是，某些依赖关系可能使用 "),e("code",[n._v("npm_config_")]),n._v(" 环境变量，其中 从 CLI 选项中填充。 在这种情况下，你有以下选择：")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("设置明确的环境变量：npm_config_foo=true pnpm install")])]),n._v(" "),e("li",[e("p",[n._v("用 --config.强制使用未知选项: pnpm install --config.foo")])])]),n._v(" "),e("h2",{attrs:{id:"pnpm-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-的使用"}},[n._v("#")]),n._v(" pnpm 的使用")]),n._v(" "),e("p",[e("strong",[n._v("全局安装")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("npm install pnpm -g\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[e("strong",[n._v("设置源")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//查看源\npnpm config get registry \n//切换淘宝源\npnpm config set registry https://registry.npmmirror.com/\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br")])]),e("p",[e("strong",[n._v("使用")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pnpm install\npnpm i\npnpm add pkg    // -S  保存到 dependencies 配置项下\npnpm add -D pkg    // -D 保存到 devDependencies 配置项下\npnpm add -O pkg    // -D 保存到 optionalDependencies 配置项下\npnpm add -g pkg    // 安装软件包到全局环境中\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[e("strong",[n._v("移除")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pnpm remove pkg                            //从 node_modules 和 package.json 文件中删除包\npnpm remove pkg --global                   //从全局环境中删除指定的软件包\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])]),e("p",[e("strong",[n._v("更新")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pnpm up                // 更新 package.json 下指定的所有包\npnpm upgrade pkg        // 更新指定的软件包\npnpm upgrade pkg --global   // 更新指定的全局软件包\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[e("strong",[n._v("配置npm")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('npm adduser   # 登录or注册\nnpm config ls -l    # 查询所有npm相关的配置，调用npm config set进行更改或覆盖\nnpm config set prefix "D:\\nodejs\\npm-global"    # 配置npm全局安装路径，添加Path  \'%NODE%\\npm-global\'\nnpm config set cache "D:\\nodejs\\npm-cache"    # 配置npm缓存路径\nnpm config set registry "https://registry.npm.taobao.org/" \n# 修改npm镜像(https://registry.npmjs.org/)(可以安装cnpm后修改cnpm的镜像)\n# 配置成功后再次调用 npm config ls 查看\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])]),e("p",[e("strong",[n._v("配置yarn")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('yarn config list    # 查看yarn相关配置\nyarn global bin    # yarn全局bin位置\nyarn global dir    # yarn全局安装位置\nyarn cache dir    # yarn全局缓存位置\nyarn config set prefix "D:\\nodejs\\Yarn\\global"    # 配置yarn全局bin路径(D:\\nodejs\\Yarn\\global\\bin) 添加Path \'%NODE%\\Yarn\\global\\bin\'\nyarn config set global-folder "D:\\nodejs\\Yarn\\global"    # 配置yarn全局安装路径\nyarn config set link-folder "D:\\nodejs\\Yarn\\link"    # 配置yarn全局link路径\nyarn config set cache-folder "D:\\nodejs\\Yarn\\Cache"    # 配置yarn全局缓存路径\nyarn config set registry "https://registry.npm.taobao.org/"    # 修改yarn镜像(https://registry.yarnpkg.com)\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("p",[e("strong",[n._v("配置pnpm")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('pnpm config set store-dir "D:\\pnpm\\pnpm-store"    # pnpm全局仓库路径(类似 .git 仓库)\npnpm config set global-dir "D:\\pnpm\\pnpm-global"    # pnpm全局安装路径\npnpm config set global-bin-dir "D:\\pnpm"    # pnpm全局bin路径\npnpm config set state-dir "D:\\pnpm"    # pnpm创建pnpm-state.json文件的目录\npnpm config set cache-dir "D:\\pnpm\\pnpm-cache"    # pnpm全局缓存路径\npnpm config set registry https://registry.npmjs.org/    # 设置淘宝镜像源\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[e("strong",[n._v("在系统上禁止使用脚本解决方法")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 以管理员身份运行power shell\nset-executionpolicy remotesigned\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])]),e("h2",{attrs:{id:"扩展点知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展点知识"}},[n._v("#")]),n._v(" 扩展点知识")]),n._v(" "),e("p",[n._v("上文中我们说到，当多个项目安装相同版本的依赖包时，pnpm 会硬链接至硬盘的统一位置。那么我们下面就来探讨下为什么 pnpm 的这种处理方式会比 npm 和 yarn 更快，以及这个硬链接是怎么回事呢。")]),n._v(" "),e("p",[e("strong",[n._v("npm version 3")])]),n._v(" "),e("p",[n._v("在 "),e("code",[n._v("npm@3")]),n._v(" 之前，"),e("code",[n._v("node_modules")]),n._v(" 的结构是可以预测且简洁的，因为 "),e("code",[n._v("node_modules")]),n._v(" 中的每个依赖项都有自己的 "),e("code",[n._v("node_modules")]),n._v(" 文件夹，且所有依赖都在包中指定 "),e("code",[n._v("package.json")]),n._v(".")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("node_modules\n└─ foo\n   ├─ index.js\n   ├─ package.json\n   └─ node_modules\n      └─ bar\n         ├─ index.js\n         └─ package.json\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("p",[n._v("这种方法有两个弊端：")]),n._v(" "),e("ol",[e("li",[n._v("经常会导致依赖包创建了过深的依赖树，这导致 Windows 上会出现长路径的问题")]),n._v(" "),e("li",[n._v("同一个依赖包被复制到多个依赖关系下，浪费了大量的硬盘空间")])]),n._v(" "),e("p",[n._v("为了解决这些问题，"),e("code",[n._v("npm")]),n._v(" 重新思考了 "),e("code",[n._v("node_modules")]),n._v(" 的结构，迎来了扁平化。"),e("code",[n._v("npm@3")]),n._v(" 的 "),e("code",[n._v("node_modules")]),n._v(" 结构如下")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("node_modules\n├─ foo\n|  ├─ index.js\n|  └─ package.json\n└─ bar\n   ├─ index.js\n   └─ package.json\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])]),e("p",[e("code",[n._v("npm@3")]),n._v("将所有依赖包下用到的依赖包都提升至"),e("code",[n._v("node_modules")]),n._v("的根目录，将依赖关系树扁平化处理了。")]),n._v(" "),e("p",[n._v("而这又带来了新的弊端。")]),n._v(" "),e("p",[e("code",[n._v("npm@3")]),n._v("将依赖关系树扁平化的同时，也将未在 "),e("code",[n._v("package.json")]),n._v(" 声明的依赖包提升至"),e("code",[n._v("node_modules")]),n._v("的根目录了。这使得我们可以使用未被声明的依赖包。例如我们安装"),e("code",[n._v("express")]),n._v("至我们项目中，"),e("code",[n._v("node_modules")]),n._v("的结构如下：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("accepts\narray-flatten\ncontent-disposition\ncontent-type\ncookie\ncookie-signature\ndebug\ndepd\ndestroy\nee-first\nencodeurl\nescape-html\netag\nexpress\nfinalhandler\nforwarded\nfresh\nhttp-errors\ninherits\nipaddr.js\nmedia-typer\nmerge-descriptors\nmethods\nmime\nmime-db\nmime-types\nms\nnegotiator\non-finished\nparseurl\npath-to-regexp\nproxy-addr\nqs\nrange-parser\nsend\nserve-static\nsetprototypeof\nstatuses\ntype-is\nunpipe\nutils-merge\nvary\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br")])]),e("p",[n._v("这使得我们在项目中尽管在"),e("code",[n._v("package.json")]),n._v("中只声明并安装了"),e("code",[n._v("express")]),n._v("，但我们仍可以使用例如"),e("code",[n._v("debug")]),n._v("等依赖包而不会报错。并且在开发及生产环境中都不会报错。")]),n._v(" "),e("p",[n._v("这看上去并没有什么问题，反正在生产环境中一切正常。但这将在程序中埋下一个定时炸弹。当我们在项目中使用"),e("code",[n._v("debug@1")]),n._v("中的某一API时，如果它在下一版本进行了更新，而"),e("code",[n._v("express")]),n._v("在某次补丁中依赖了"),e("code",[n._v("debug@2")]),n._v("的下一版本，而我们更新"),e("code",[n._v("express")]),n._v("时，"),e("code",[n._v("debug@2")]),n._v("也会自然而然的安装到"),e("code",[n._v("node_modules")]),n._v("的根目录下，这将导致项目出现问题，尽管你没有进行任何改动。")]),n._v(" "),e("p",[n._v("亦或是，"),e("code",[n._v("express")]),n._v("停止使用"),e("code",[n._v("debug")]),n._v("，并在依赖中删除，当我们更新"),e("code",[n._v("express")]),n._v("时，"),e("code",[n._v("debug")]),n._v("将会从"),e("code",[n._v("node_modules")]),n._v("的根目录下删除，这又将导致项目出现问题。")]),n._v(" "),e("p",[e("strong",[n._v("yarn2(berry)、yarn pnp(Plug’n’Play)")])]),n._v(" "),e("p",[e("code",[n._v("yarn")]),n._v("的一些特性是走在"),e("code",[n._v("npm")]),n._v("的前边的，默认产生的"),e("code",[n._v("lockfile")]),n._v("就是很重要的一个。与"),e("code",[n._v("npm@5")]),n._v("之后推出的"),e("code",[n._v("package-lock.json")]),n._v("不同，"),e("code",[n._v("yarn")]),n._v("并没有采用"),e("code",[n._v("JSON")]),n._v("格式的文件，而是使用了自定义的格式，名字就叫做"),e("code",[n._v("yarn.lock")]),n._v("，与前者不同，后者的"),e("code",[n._v("lockfile")]),n._v("目录结构并不能复制出完完全全一样的"),e("code",[n._v("node_modules拓")]),n._v("扑结构，他只是把依赖到的所有库 flat 成根目录级别，这样更方便做diff。")]),n._v(" "),e("p",[n._v("但"),e("code",[n._v("yarn1")]),n._v("仍然跟"),e("code",[n._v("npm@3")]),n._v("采取的一样的扁平化结构，与"),e("code",[n._v("npm@3")]),n._v("的依赖管理存在相同的问题。所以他们的团队做除了"),e("code",[n._v("Plug’n’Play")]),n._v("的尝试。")]),n._v(" "),e("p",[n._v("它其实是省略了"),e("code",[n._v("node_modules")]),n._v("的拷贝，转而生成了一个"),e("code",[n._v("**.pnp.js")]),n._v("的文件去记录包的版本，以及映射到的磁盘位置，即把每个包看作整体，压缩成一个"),e("code",[n._v("zip")]),n._v("；一个"),e("code",[n._v(".yarn")]),n._v("文件夹，里面又有"),e("code",[n._v("cache")]),n._v("和"),e("code",[n._v("unplugged**")]),n._v("目录，前者存放压缩过的依赖包，后者可以通过"),e("code",[n._v("unplugin")]),n._v("指令解压某个想要手动修改的包。这带来了几个最直观的好处")]),n._v(" "),e("ul",[e("li",[n._v("因为不会生成 node_modules 目录，因此也不会存在 npm@3、yarn1 的 dependency")]),n._v(" "),e("li",[n._v("CI 环境中多个 CI 实例可以共享同一份缓存")]),n._v(" "),e("li",[n._v("同一个系统中的多个项目不再需要占用多份磁盘空间")])]),n._v(" "),e("p",[e("strong",[n._v("pnpm")])]),n._v(" "),e("p",[e("code",[n._v("pnpm")]),n._v("针对"),e("code",[n._v("npm@2")]),n._v("的"),e("code",[n._v("nest mode")]),n._v("，它没有采取"),e("code",[n._v("flat mode")]),n._v("，而是使用"),e("code",[n._v("hard link")]),n._v("的方式，使得需要的版本的包只会在一个PC上安装一次，节省空间。")]),n._v(" "),e("p",[e("strong",[n._v("软连接和硬链接")])]),n._v(" "),e("p",[n._v("在计算机中我们文件夹中的文件实际上是一个指针，但这个指针并不是直接指向我们在磁盘中存储文件的位置，而是指向一个 inode 块，inode 中存储着文件在磁盘中的各种信息，一般我们的文件都是指向 对应文件的 inode，我们把这类链接成为硬链接，但是还有一种链接，它存储的并不是实际的值，而是另一个硬链接的地址，我们把这类链接成为软链接。")]),n._v(" "),e("p",[e("strong",[n._v("硬链接特性")])]),n._v(" "),e("ul",[e("li",[n._v("具有相同inode节点号的多个文件互为硬链接文件；")]),n._v(" "),e("li",[n._v("删除硬链接文件或者删除源文件任意之一，文件实体并未被删除；")]),n._v(" "),e("li",[n._v("只有删除了源文件和所有对应的硬链接文件，文件实体才会被删除；")]),n._v(" "),e("li",[n._v("硬链接文件是文件的另一个入口；")]),n._v(" "),e("li",[n._v("可以通过给文件设置硬链接文件来防止重要文件被误删；")]),n._v(" "),e("li",[n._v("创建硬链接命令 ln 源文件 硬链接文件；")]),n._v(" "),e("li",[n._v("硬链接文件是普通文件，可以用rm删除；")]),n._v(" "),e("li",[n._v("对于静态文件（没有进程正在调用），当硬链接数为0时文件就被删除。注意：如果有进程正在调用，则无法删除或者即使文件名被删除但空间不会释放。")])]),n._v(" "),e("p",[e("strong",[n._v("软连接特性")])]),n._v(" "),e("ul",[e("li",[n._v("软链接类似windows系统的快捷方式；")]),n._v(" "),e("li",[n._v("软链接里面存放的是源文件的路径，指向源文件；")]),n._v(" "),e("li",[n._v("删除源文件，软链接依然存在，但无法访问源文件内容；")]),n._v(" "),e("li",[n._v("软链接失效时一般是白字红底闪烁；")]),n._v(" "),e("li",[n._v("创建软链接命令 ln -s 源文件 软链接文件；")]),n._v(" "),e("li",[n._v("软链接和源文件是不同的文件，文件类型也不同，inode号也不同；")]),n._v(" "),e("li",[n._v("软链接的文件类型是“l”，可以用rm删除。")])]),n._v(" "),e("p",[e("strong",[n._v("参考链接：")])]),n._v(" "),e("p",[e("a",{attrs:{href:"https://www.kochan.io/nodejs/why-should-we-use-pnpm.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Why should we use pnpm"),e("OutboundLink")],1)]),n._v(" "),e("p",[e("a",{attrs:{href:"https://medium.com/pnpm/pnpms-strictness-helps-to-avoid-silly-bugs-9a15fb306308",target:"_blank",rel:"noopener noreferrer"}},[n._v("pnpm’s strictness helps to avoid silly bugs"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);